// NAARAD Chatbot Script
(function() {
  const btn = document.getElementById('narayan-chatbot-btn');
  const windowEl = document.getElementById('narayan-chatbot-window');
  const messages = document.getElementById('narayan-chat-messages');
  const chatPopup = document.querySelector('.chat-popup');
  const callNowBtn = document.getElementById('callNowBtn');

  // Chat history storage
  const CHAT_HISTORY_KEY = 'narayan_chat_history';

  // Check if this is a new session
  const isNewSession = !sessionStorage.getItem('narayan_session_started');
  if (isNewSession) {
    // Clear chat history for new session
    localStorage.removeItem(CHAT_HISTORY_KEY);
    localStorage.removeItem('narayan_language');
    sessionStorage.setItem('narayan_session_started', 'true');
  }

  // Language support
  let narayanLang = localStorage.getItem('narayan_language') || null;
  let langChosen = !!narayanLang;
  
  // Load chat history
  function loadChatHistory() {
    const history = localStorage.getItem(CHAT_HISTORY_KEY);
    if (history) {
      const parsedHistory = JSON.parse(history);
      messages.innerHTML = ''; // Clear existing messages
      parsedHistory.forEach(msg => {
        const div = document.createElement('div');
        div.className = `narayan-message ${msg.type}`;
        div.innerHTML = msg.content;
        messages.appendChild(div);
        
        // Reattach event listeners for language buttons
        div.querySelectorAll('.narayan-lang-btn').forEach(btn => {
          btn.onclick = function() {
            setLanguage(btn.getAttribute('data-lang'), btn.innerText);
          };
        });

        // Reattach event listeners for question buttons
        div.querySelectorAll('.question-btn').forEach(btn => {
          btn.onclick = function() {
            const question = btn.getAttribute('data-question');
            const answer = btn.getAttribute('data-answer');
            addUserMessage(question);
            setTimeout(() => {
              addBotMessageWithTyping(answer);
            }, 500);
          };
        });
      });
      messages.scrollTop = messages.scrollHeight;
    }
  }

  // Save chat history
  function saveChatHistory() {
    const messageElements = messages.querySelectorAll('.narayan-message');
    const history = Array.from(messageElements).map(el => ({
      type: el.classList.contains('narayan-bot') ? 'narayan-bot' : 'narayan-user',
      content: el.innerHTML
    }));
    localStorage.setItem(CHAT_HISTORY_KEY, JSON.stringify(history));
  }

  const botTexts = {
    en: {
      greet: "Hello! I am NAARAD, your AI assistant. Please select a question to learn more about our trust:",
      language: 'Please choose a language: <button class="narayan-lang-btn" data-lang="en">English</button> <button class="narayan-lang-btn" data-lang="hi">рд╣рд┐рдиреНрджреА</button> <button class="narayan-lang-btn" data-lang="mr">рдорд░рд╛рдареА</button>',
      setlang: 'Language set to: ',
      other: 'Other',
      notification: 'ЁЯУЮ You will get your reply within 24-48 hours',
      questions: [
        {
          q: "What is Poona Panjarpole Trust?",
          a: "Poona Panjarpole Trust, established in 1855, is a sanctuary for over 2,200 cattle. Located in Bhosari, we provide shelter, food, and medical care to abandoned and aging cattle."
        },
        {
          q: "How can I donate?",
          a: "You can donate through our UPI ID: Mswipe.1400041924000711@kotak or visit our donation section for bank details. Every contribution helps us care for our cattle."
        },
        {
          q: "What products do you sell?",
          a: "We sell various products including Ghee, Buttermilk, Biological Letter, Vermi Compost, Vermiwash, and more. Visit our Products section for details."
        },
        {
          q: "How can I volunteer?",
          a: "You can volunteer by filling out the form in our Volunteer section. We welcome help with daily care, event organization, and spreading awareness about our cause."
        },
        {
          q: "Where are you located?",
          a: "We are located at Pune-Nashik Highway, Bhosari, Pune тАУ 411039. You can find our exact location in the Contact Us section with a map."
        }
      ]
    },
    hi: {
      greet: "рдирдорд╕реНрддреЗ! рдореИрдВ NAARAD рд╣реВрдВ, рдЖрдкрдХреА AI рд╕рд╣рд╛рдпрдХред рдХреГрдкрдпрд╛ рд╣рдорд╛рд░реЗ рдЯреНрд░рд╕реНрдЯ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЕрдзрд┐рдХ рдЬрд╛рдирдиреЗ рдХреЗ рд▓рд┐рдП рдПрдХ рдкреНрд░рд╢реНрди рдЪреБрдиреЗрдВ:",
      language: 'рдХреГрдкрдпрд╛ рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ: <button class="narayan-lang-btn" data-lang="en">English</button> <button class="narayan-lang-btn" data-lang="hi">рд╣рд┐рдиреНрджреА</button> <button class="narayan-lang-btn" data-lang="mr">рдорд░рд╛рдареА</button>',
      setlang: 'рднрд╛рд╖рд╛ рд╕реЗрдЯ рдХреА рдЧрдИ: ',
      other: 'рдЕрдиреНрдп',
      notification: 'ЁЯУЮ рдЖрдкрдХреЛ 24-48 рдШрдВрдЯреЛрдВ рдХреЗ рднреАрддрд░ рдЙрддреНрддрд░ рдорд┐рд▓ рдЬрд╛рдПрдЧрд╛',
      questions: [
        {
          q: "рдкреВрдирд╛ рдкрдВрдЬрд░рдкреЛрд▓ рдЯреНрд░рд╕реНрдЯ рдХреНрдпрд╛ рд╣реИ?",
          a: "рдкреВрдирд╛ рдкрдВрдЬрд░рдкреЛрд▓ рдЯреНрд░рд╕реНрдЯ, 1855 рдореЗрдВ рд╕реНрдерд╛рдкрд┐рдд, 2,200 рд╕реЗ рдЕрдзрд┐рдХ рдкрд╢реБрдУрдВ рдХреЗ рд▓рд┐рдП рдПрдХ рдЖрд╢реНрд░рдп рд╕реНрдерд▓ рд╣реИред рднреЛрд╕рд░реА рдореЗрдВ рд╕реНрдерд┐рдд, рд╣рдо рдкрд░рд┐рддреНрдпрдХреНрдд рдФрд░ рд╡реГрджреНрдз рдкрд╢реБрдУрдВ рдХреЛ рдЖрд╢реНрд░рдп, рднреЛрдЬрди рдФрд░ рдЪрд┐рдХрд┐рддреНрд╕рд╛ рджреЗрдЦрднрд╛рд▓ рдкреНрд░рджрд╛рди рдХрд░рддреЗ рд╣реИрдВред"
        },
        {
          q: "рдореИрдВ рджрд╛рди рдХреИрд╕реЗ рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВ?",
          a: "рдЖрдк рд╣рдорд╛рд░реЗ UPI ID: Mswipe.1400041924000711@kotak рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ рджрд╛рди рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ рдпрд╛ рдмреИрдВрдХ рд╡рд┐рд╡рд░рдг рдХреЗ рд▓рд┐рдП рд╣рдорд╛рд░реЗ рджрд╛рди рдЦрдВрдб рдкрд░ рдЬрд╛ рд╕рдХрддреЗ рд╣реИрдВред рд╣рд░ рдпреЛрдЧрджрд╛рди рд╣рдорд╛рд░реЗ рдкрд╢реБрдУрдВ рдХреА рджреЗрдЦрднрд╛рд▓ рдореЗрдВ рдорджрдж рдХрд░рддрд╛ рд╣реИред"
        },
        {
          q: "рдЖрдк рдХреМрди рд╕реЗ рдЙрддреНрдкрд╛рдж рдмреЗрдЪрддреЗ рд╣реИрдВ?",
          a: "рд╣рдо рд╡рд┐рднрд┐рдиреНрди рдЙрддреНрдкрд╛рдж рдмреЗрдЪрддреЗ рд╣реИрдВ рдЬрд┐рдирдореЗрдВ рдШреА, рдЫрд╛рдЫ, рдЬреИрд╡рд┐рдХ рдЦрд╛рдж, рд╡рд░реНрдореА рдХрдореНрдкреЛрд╕реНрдЯ, рд╡рд░реНрдореАрд╡реЙрд╢ рдФрд░ рдЕрдзрд┐рдХ рд╢рд╛рдорд┐рд▓ рд╣реИрдВред рд╡рд┐рд╡рд░рдг рдХреЗ рд▓рд┐рдП рд╣рдорд╛рд░реЗ рдЙрддреНрдкрд╛рдж рдЦрдВрдб рдкрд░ рдЬрд╛рдПрдВред"
        },
        {
          q: "рдореИрдВ рд╕реНрд╡рдпрдВрд╕реЗрд╡рдХ рдХреИрд╕реЗ рдмрди рд╕рдХрддрд╛ рд╣реВрдВ?",
          a: "рдЖрдк рд╣рдорд╛рд░реЗ рд╕реНрд╡рдпрдВрд╕реЗрд╡рдХ рдЦрдВрдб рдореЗрдВ рдлреЙрд░реНрдо рднрд░рдХрд░ рд╕реНрд╡рдпрдВрд╕реЗрд╡рдХ рдмрди рд╕рдХрддреЗ рд╣реИрдВред рд╣рдо рджреИрдирд┐рдХ рджреЗрдЦрднрд╛рд▓, рдХрд╛рд░реНрдпрдХреНрд░рдо рдЖрдпреЛрдЬрди рдФрд░ рд╣рдорд╛рд░реЗ рдХрд╛рд░рдг рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЬрд╛рдЧрд░реВрдХрддрд╛ рдлреИрд▓рд╛рдиреЗ рдореЗрдВ рдорджрдж рдХрд╛ рд╕реНрд╡рд╛рдЧрдд рдХрд░рддреЗ рд╣реИрдВред"
        },
        {
          q: "рдЖрдк рдХрд╣рд╛рдБ рд╕реНрдерд┐рдд рд╣реИрдВ?",
          a: "рд╣рдо рдкреБрдгреЗ-рдирд╛рд╢рд┐рдХ рд╣рд╛рдИрд╡реЗ, рднреЛрд╕рд░реА, рдкреБрдгреЗ - 411039 рдкрд░ рд╕реНрдерд┐рдд рд╣реИрдВред рдЖрдк рд╣рдорд╛рд░рд╛ рд╕рдЯреАрдХ рд╕реНрдерд╛рди рд╕рдВрдкрд░реНрдХ рдЦрдВрдб рдореЗрдВ рдирдХреНрд╢реЗ рдХреЗ рд╕рд╛рде рдкрд╛ рд╕рдХрддреЗ рд╣реИрдВред"
        }
      ]
    },
    mr: {
      greet: "рдирдорд╕реНрдХрд╛рд░! рдореА NAARAD рдЖрд╣реЗ, рддреБрдордЪреА AI рд╕рд╣рд╛рдпреНрдпрдХ. рдХреГрдкрдпрд╛ рдЖрдордЪреНрдпрд╛ рдЯреНрд░рд╕реНрдЯрдмрджреНрджрд▓ рдЕрдзрд┐рдХ рдЬрд╛рдгреВрди рдШреЗрдгреНрдпрд╛рд╕рд╛рдареА рдПрдХ рдкреНрд░рд╢реНрди рдирд┐рд╡рдбрд╛:",
      language: 'рдХреГрдкрдпрд╛ рднрд╛рд╖рд╛ рдирд┐рд╡рдбрд╛: <button class="narayan-lang-btn" data-lang="en">English</button> <button class="narayan-lang-btn" data-lang="hi">рд╣рд┐рдиреНрджреА</button> <button class="narayan-lang-btn" data-lang="mr">рдорд░рд╛рдареА</button>',
      setlang: 'рднрд╛рд╖рд╛ рд╕реЗрдЯ рдХреЗрд▓реА: ',
      other: 'рдЗрддрд░',
      notification: 'ЁЯУЮ рддреБрдореНрд╣рд╛рд▓рд╛ 24-48 рддрд╛рд╕рд╛рдВрдд рдЙрддреНрддрд░ рдорд┐рд│реЗрд▓',
      questions: [
        {
          q: "рдкреВрдирд╛ рдкрдВрдЬрд░рдкреЛрд▓ рдЯреНрд░рд╕реНрдЯ рдореНрд╣рдгрдЬреЗ рдХрд╛рдп?",
          a: "рдкреВрдирд╛ рдкрдВрдЬрд░рдкреЛрд▓ рдЯреНрд░рд╕реНрдЯ, 1855 рдордзреНрдпреЗ рд╕реНрдерд╛рдкрди рдХреЗрд▓реЗрд▓реЗ, 2,200 рдкреЗрдХреНрд╖рд╛ рдЬрд╛рд╕реНрдд рдЧреБрд░рд╛рдВрд╕рд╛рдареА рдПрдХ рдЖрд╢реНрд░рдпрд╕реНрдерд╛рди рдЖрд╣реЗ. рднреЛрд╕рд░реА рдпреЗрдереЗ рд╕реНрдерд┐рдд, рдЖрдореНрд╣реА рдкрд░рд┐рддреНрдпрдХреНрдд рдЖрдгрд┐ рд╡реГрджреНрдз рдЧреБрд░рд╛рдВрдирд╛ рдЖрд╢реНрд░рдп, рдЕрдиреНрди рдЖрдгрд┐ рд╡реИрджреНрдпрдХреАрдп рд╕реЗрд╡рд╛ рдкреБрд░рд╡рддреЛ."
        },
        {
          q: "рдореА рджрд╛рди рдХрд╕реЗ рдХрд░реВ рд╢рдХрддреЛ?",
          a: "рддреБрдореНрд╣реА рдЖрдордЪреНрдпрд╛ UPI ID: Mswipe.1400041924000711@kotak рджреНрд╡рд╛рд░реЗ рджрд╛рди рдХрд░реВ рд╢рдХрддрд╛ рдХрд┐рдВрд╡рд╛ рдмрдБрдХ рддрдкрд╢реАрд▓рд╛рдВрд╕рд╛рдареА рдЖрдордЪреНрдпрд╛ рджрд╛рди рд╡рд┐рднрд╛рдЧрд╛рдд рдЬрд╛рдК рд╢рдХрддрд╛. рдкреНрд░рддреНрдпреЗрдХ рдпреЛрдЧрджрд╛рди рдЖрдордЪреНрдпрд╛ рдЧреБрд░рд╛рдВрдЪреНрдпрд╛ рдХрд╛рд│рдЬреАрдд рдорджрдд рдХрд░рддреЗ."
        },
        {
          q: "рддреБрдореНрд╣реА рдХреЛрдгрддреЗ рдЙрддреНрдкрд╛рджрдиреЗ рд╡рд┐рдХрддрд╛?",
          a: "рдЖрдореНрд╣реА рддреВрдк, рдЫрд╛рдЫ, рдЬреИрд╡рд┐рдХ рдЦрдд, рд╡рд░реНрдореА рдХрдореНрдкреЛрд╕реНрдЯ, рд╡рд░реНрдореАрд╡реЙрд╢ рдЖрдгрд┐ рдЕрдзрд┐рдХ рдЙрддреНрдкрд╛рджрдиреЗ рд╡рд┐рдХрддреЛ. рддрдкрд╢реАрд▓рд╛рдВрд╕рд╛рдареА рдЖрдордЪреНрдпрд╛ рдЙрддреНрдкрд╛рджрди рд╡рд┐рднрд╛рдЧрд╛рдд рдЬрд╛."
        },
        {
          q: "рдореА рд╕реНрд╡рдпрдВрд╕реЗрд╡рдХ рдХрд╕рд╛ рдмрдиреВ рд╢рдХрддреЛ?",
          a: "рддреБрдореНрд╣реА рдЖрдордЪреНрдпрд╛ рд╕реНрд╡рдпрдВрд╕реЗрд╡рдХ рд╡рд┐рднрд╛рдЧрд╛рдд рдлреЙрд░реНрдо рднрд░реВрди рд╕реНрд╡рдпрдВрд╕реЗрд╡рдХ рдмрдиреВ рд╢рдХрддрд╛. рдЖрдореНрд╣реА рджреИрдирдВрджрд┐рди рдХрд╛рд│рдЬреА, рдХрд╛рд░реНрдпрдХреНрд░рдо рдЖрдпреЛрдЬрди рдЖрдгрд┐ рдЖрдордЪреНрдпрд╛ рдХрд╛рд░реНрдпрд╛рдмрджреНрджрд▓ рдЬрд╛рдЧрд░реВрдХрддрд╛ рдкрд╕рд░рд╡рдгреНрдпрд╛рдд рдорджрдд рдХрд░рдгреНрдпрд╛рд╕ рд╕реНрд╡рд╛рдЧрдд рдХрд░рддреЛ."
        },
        {
          q: "рддреБрдореНрд╣реА рдХреБрдареЗ рд╕реНрдерд┐рдд рдЖрд╣рд╛рдд?",
          a: "рдЖрдореНрд╣реА рдкреБрдгреЗ-рдирд╛рд╢рд┐рдХ рдорд╣рд╛рдорд╛рд░реНрдЧ, рднреЛрд╕рд░реА, рдкреБрдгреЗ - 411039 рдпреЗрдереЗ рд╕реНрдерд┐рдд рдЖрд╣реЛрдд. рддреБрдореНрд╣реА рдЖрдордЪреЗ рдЕрдЪреВрдХ рд╕реНрдерд╛рди рд╕рдВрдкрд░реНрдХ рд╡рд┐рднрд╛рдЧрд╛рдд рдирдХрд╛рд╢рд╛рд╕рд╣ рд╢реЛрдзреВ рд╢рдХрддрд╛."
        }
      ]
    }
  };

  // Add typing indicator
  function addTypingIndicator() {
    const div = document.createElement('div');
    div.className = 'narayan-message narayan-bot typing';
    div.innerHTML = '<span class="typing-dot"></span><span class="typing-dot"></span><span class="typing-dot"></span>';
    messages.appendChild(div);
    messages.scrollTop = messages.scrollHeight;
    return div;
  }

  // Remove typing indicator
  function removeTypingIndicator(indicator) {
    if (indicator && indicator.parentNode) {
      indicator.parentNode.removeChild(indicator);
    }
  }

  // Add bot message with typing animation
  async function addBotMessageWithTyping(msg) {
    if (!msg || (typeof msg === 'string' && msg.trim() === '')) return;
    const typingIndicator = addTypingIndicator();
    await new Promise(resolve => setTimeout(resolve, 1500));
    removeTypingIndicator(typingIndicator);
    const div = document.createElement('div');
    div.className = 'narayan-message narayan-bot';
    div.innerHTML = msg;
    messages.appendChild(div);
    messages.scrollTop = messages.scrollHeight;

    // Add event listeners for language buttons
    div.querySelectorAll('.narayan-lang-btn').forEach(btn => {
      btn.onclick = function() {
        setLanguage(btn.getAttribute('data-lang'), btn.innerText);
      };
    });

    // Add event listeners for question buttons
    div.querySelectorAll('.question-btn').forEach(btn => {
      btn.onclick = function() {
        const question = btn.getAttribute('data-question');
        const answer = btn.getAttribute('data-answer');
        addUserMessage(question);
        setTimeout(() => {
          addBotMessageWithTyping(answer);
        }, 500);
      };
    });

    saveChatHistory();
  }

  // Toggle chat window
  btn.addEventListener('click', () => {
    windowEl.classList.toggle('closed');
    if (!windowEl.classList.contains('closed')) {
      if (callNowBtn) callNowBtn.style.display = 'none';
      const socialToggleBtn = document.getElementById('socialToggleBtn');
      if (socialToggleBtn) socialToggleBtn.style.display = 'none';
      chatPopup.style.display = 'none';
      setTimeout(() => { messages.scrollTop = messages.scrollHeight; }, 100);
      if (!langChosen) {
        showLanguagePrompt();
      } else {
        loadChatHistory();
        if (messages.children.length === 0) {
          showQuestions();
        }
      }
    } else {
      if (callNowBtn) callNowBtn.style.display = '';
      const socialToggleBtn = document.getElementById('socialToggleBtn');
      if (socialToggleBtn) socialToggleBtn.style.display = '';
      chatPopup.style.display = 'block';
    }
  });

  // Add user message
  function addUserMessage(msg) {
    const div = document.createElement('div');
    div.className = 'narayan-message narayan-user';
    div.innerText = msg;
    messages.appendChild(div);
    messages.scrollTop = messages.scrollHeight;
    saveChatHistory();
  }

  async function setLanguage(lang, label) {
    narayanLang = lang;
    langChosen = true;
    localStorage.setItem('narayan_language', lang);
    await addBotMessageWithTyping(botTexts[narayanLang].setlang + label + '.<br>' + botTexts[narayanLang].greet);
    showQuestions();
  }

  // Show language selection as first message
  function showLanguagePrompt() {
    if (!messages.children.length) {
      addBotMessageWithTyping(botTexts.en.language);
    }
  }

  // Show questions
  function showQuestions() {
    const questions = botTexts[narayanLang].questions;
    let questionsHtml = '<div class="questions-container">';
    questions.forEach(q => {
      questionsHtml += `<button class="question-btn" data-question="${q.q}" data-answer="${q.a}">${q.q}</button>`;
    });
    questionsHtml += `<button class="question-btn other-btn">${botTexts[narayanLang].other}</button>`;
    questionsHtml += '</div>';
    addBotMessageWithTyping(questionsHtml);
  }

  // Listen for 'Other' button click and show input
  document.addEventListener('click', function(e) {
    if (e.target && e.target.classList.contains('other-btn')) {
      const currentLang = narayanLang || 'en';
      const notificationText = botTexts[currentLang].notification;
      const inputHtml = `
        <div class="other-input-container">
          <div style="background-color: #fff3cd; border: 1px solid #ffeaa7; border-radius: 5px; padding: 10px; margin-bottom: 10px; color: #856404; font-size: 0.9em; text-align: center;">
            ${notificationText}
          </div>
          <input type="text" id="other-message" placeholder="Type your message..." style="width: 70%; padding: 0.5em; margin-right: 0.5em;">
          <button id="send-other-btn" style="padding: 0.5em 1em;">Send</button>
        </div>
      `;
      addBotMessageWithTyping(inputHtml);
    }
    if (e.target && e.target.id === 'send-other-btn') {
      const msg = document.getElementById('other-message').value.trim();
      if (msg) {
        window.open(`https://wa.me/918999158881?text=${encodeURIComponent(msg)}`, '_blank');
      }
    }
  });

  // On load, check for existing chat history
  if (!windowEl.classList.contains('closed')) {
    const history = localStorage.getItem(CHAT_HISTORY_KEY);
    if (history) {
      loadChatHistory();
    } else {
      showLanguagePrompt();
    }
  }

  // Listen for translation updates and update the chatbot popup
  if (window.applyTranslations) {
    const origApplyTranslations = window.applyTranslations;
    window.applyTranslations = function() {
      origApplyTranslations();
      // Update chatbot popup text
      if (chatPopup && window.currentTranslations && window.currentTranslations['chatbot_popup']) {
        chatPopup.innerHTML = window.currentTranslations['chatbot_popup'];
        console.log('[Chatbot Popup] Language:', (window.currentTranslations && window.currentTranslations['nav_home']) ? window.currentTranslations['nav_home'] : 'unknown', '| Text:', window.currentTranslations['chatbot_popup']);
      }
    };
  }

  // Remove popup show/hide cycle, always show popup unless chat window is open
  if (chatPopup) {
    chatPopup.style.display = 'block';
    chatPopup.addEventListener('mouseenter', () => {
      chatPopup.style.display = 'block';
    });
    chatPopup.addEventListener('mouseleave', () => {
      chatPopup.style.display = 'block';
    });
  }
})(); 
